{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","map","good","key","uuidv4","value","App","state","selectedGoods","clearSelection","setState","addGood","removeGood","selectedGood","filter","activeButtonStatus","includes","formatTitle","length","slice","join","this","className","isGoodSelected","buttonCallback","buttonTitle","buttonToRender","type","onClick","classnames","active","undefined","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QASMA,EAA0B,CAC9B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACAC,KAAI,SAACC,GAAD,MAAW,CACfC,IAAKC,cACLC,MAAOH,MAOHI,E,4MACJC,MAAe,CACbC,cAAe,I,EAGjBC,eAAiB,kBAAM,EAAKC,SAAS,CAAEF,cAAe,M,EAEtDG,QAAU,SAACT,GACT,IAAQM,EAAkB,EAAKD,MAAvBC,cAER,EAAKE,SAAS,CAAEF,cAAc,GAAD,mBAAMA,GAAN,CAAqBN,O,EAGpDU,WAAa,SAACC,GACZ,IAAQL,EAAkB,EAAKD,MAAvBC,cAER,EAAKE,SAAS,CACZF,cAAeA,EAAcM,QAAO,SAACZ,GAAD,OAAUA,IAASW,Q,EAI3DE,mBAAqB,SAACb,GAAD,OAAmB,EAAKK,MAAMC,cAAcQ,SAASd,GAAQ,qBAAuB,I,EAEzGe,YAAc,WACZ,IAAQT,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcU,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUV,EAAc,GAAxB,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcW,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBACEZ,EAAcA,EAAcU,OAAS,M,4CAK7C,WAAU,IAAD,OACCV,EAAkBa,KAAKd,MAAvBC,cAER,OACE,sBAAKc,UAAU,MAAf,UACE,gDAEGD,KAAKJ,iBAGR,oBAAIK,UAAU,aAAd,SACGtB,EAAgBC,KAAI,SAACC,GACpB,IAAMqB,EAAiBf,EAAcQ,SAASd,EAAKG,OAC7CmB,EAAiBD,EACnB,kBAAM,EAAKX,WAAWV,EAAKG,QAC3B,kBAAM,EAAKM,QAAQT,EAAKG,QACtBoB,EAAcF,EAAiB,cAAgB,WAC/CG,EACJ,wBAAQC,KAAK,SAASL,UAAU,SAASM,QAASJ,EAAlD,SACGC,IAIL,OACE,qBACEH,UAAWO,IAAW,mBAAoB,CACxCC,OAAQP,IAFZ,UAMGrB,EAAKG,MACLqB,IAHIxB,EAAKC,UAQjBK,EAAcU,OACb,wBACEI,UAAU,uBACVK,KAAK,SACLC,QAASP,KAAKZ,eAHhB,wBAOEsB,S,GAlFMC,IAAMC,WAuFT3B,ICjHf4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f1ee19c0.chunk.js","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport classnames from 'classnames';\nimport './App.scss';\n\ninterface Good {\n  key: string;\n  value: string;\n}\nconst goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n].map((good) => ({\n  key: uuidv4(),\n  value: good,\n}));\n\ntype Props = {};\ninterface State {\n  selectedGoods: string[];\n}\nclass App extends React.Component<Props, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  clearSelection = () => this.setState({ selectedGoods: [] });\n\n  addGood = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({ selectedGoods: [...selectedGoods, good] });\n  };\n\n  removeGood = (selectedGood: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({\n      selectedGoods: selectedGoods.filter((good) => good !== selectedGood),\n    });\n  };\n\n  activeButtonStatus = (good: string) => (this.state.selectedGoods.includes(good) ? 'list__item--active' : '');\n\n  formatTitle = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${\n          selectedGoods[selectedGoods.length - 1]\n        }`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Selected good:\n          {this.formatTitle()}\n        </h1>\n\n        <ul className=\"goods-list\">\n          {goodsFromServer.map((good) => {\n            const isGoodSelected = selectedGoods.includes(good.value);\n            const buttonCallback = isGoodSelected\n              ? () => this.removeGood(good.value)\n              : () => this.addGood(good.value);\n            const buttonTitle = isGoodSelected ? 'Remove good' : 'Add good';\n            const buttonToRender = (\n              <button type=\"button\" className=\"button\" onClick={buttonCallback}>\n                {buttonTitle}\n              </button>\n            );\n\n            return (\n              <li\n                className={classnames('goods-list__item', {\n                  active: isGoodSelected,\n                })}\n                key={good.key}\n              >\n                {good.value}\n                {buttonToRender}\n              </li>\n            );\n          })}\n        </ul>\n        {selectedGoods.length ? (\n          <button\n            className=\"button button--clear\"\n            type=\"button\"\n            onClick={this.clearSelection}\n          >\n            Clear\n          </button>\n        ) : undefined}\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}